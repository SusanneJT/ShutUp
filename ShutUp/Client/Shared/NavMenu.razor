@using ShutUp.Client.Services.StateContainers
@inject MessageStateContainer MessageState
@inject Blazored.LocalStorage.ILocalStorageService _localStore
@inject UserStateContainer _userState
@using ShutUp.Shared
 

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Shut Up!</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="chat">
                <span class="oi oi-chat" aria-hidden="true"></span> Chat (@MessageState.Messages.Count)
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink @onclick="@LogOut" class="nav-link" href="#">
                <span class="oi oi-account-logout logout" title="icon name" aria-hidden="true"></span> Logga ut @_userState.User.Name
            </NavLink>
        </li>
    </ul>
</div>

@code { 
    private bool collapseNavMenu = true;
    User newUser = new User();

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        _userState.OnChange += StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void LogOut()
    {
        _userState.SetProperty(newUser);
        Console.WriteLine(_userState.User.Name + " : " + _userState.User.LoggedIn);
        await _localStore.RemoveItemAsync("UserKey");
        Dispose();
        StateHasChanged();
    }

    public void Dispose()
    {
        _userState.OnChange -= StateHasChanged;
    }
}
