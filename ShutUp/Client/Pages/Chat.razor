@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@using ShutUp.Client.Services.StateContainers
@using ShutUp.Client.Services.ApiServices
@inject NavigationManager _navigationManager
@inject MessageStateContainer _messageState
@inject MessageApiService _messageApi
@inject UserStateContainer _userState
@implements IDisposable

@if (loading)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@Message" OnValidSubmit="@Send">
        <div class="form-group">
            <label>
                Meddelande: <InputText @bind-Value="@Message.MessageText" size="50" />
            </label>
            <InputCheckbox type="checkbox" id="pinned" name="pinnedCheck" @bind-Value="@Message.Pinned" />
            <button type="submit" disabled="@(!IsConnected)">Send</button>
        </div>
    </EditForm>
    <hr>

    <ul id="messagesList" class="list-group">
        @foreach (var message in _messageState.Messages)
        {
            @if (message.Pinned)
            {
                liClass = classesPinned;
            }
            else
            {
                liClass = classes;
            }

            <li class=@liClass>
                @message.User.Name <i class="small">@message.Date.ToString("yyyy-MM-dd HH:mm")</i><br />
                @message.MessageText

                @if (message.SubMessages != null)
                {
                    <br />
                    <ul class="list-group">
                        @foreach (var subMessage in message.SubMessages)
                        {
                            <li class="list-group-item">
                                @subMessage.User.Name <i class="small">@subMessage.Date.ToString("yyyy-MM-dd HH:mm")</i><br />
                                @subMessage.MessageText
                            </li>
                        }
                    </ul>
                }
                <div class="form-group">
                    <br />
                    <label>
                        Svara:
                        <input @bind="subMessageInput" size="50" />
                    </label>
                    <button @onclick="@(e => Send(message.MessageId))" disabled="@(!IsConnected)">Send</button>
                </div>
                <i @onclick="@(e => Edit(message))" class="oi oi-pencil"> Edit pinned status</i>
            </li>
      
        }
    </ul>
    <EditMessageModal @ref="@editMessageModal"  CloseEventCallback="@EditMessageModalClose" ></EditMessageModal>
}


